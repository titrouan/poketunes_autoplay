#an example
!another example

#log.starting=Initializing PokeTunes AutoPlay mod...
#log.resource_pack_missing=Resource pack not found: {0}
#log.resource_pack_found=Resource pack found: {0}
#log.playing_music=Starting music: {0}
#log.music_stopped=Music stopped.
#log.paused=Playback paused.

#usage examples :
#System.out.println(LangHelper.get("log.music_stopped"));
#System.out.println(LangHelper.get("log.music_played").replace("{0}", trackName));
#System.out.println(LangHelper.get("log.playing_music", "canalave_day"));
# -> use case :
#fichier .properties : log.track_transition=Going from music \"{0}\" to \"{1}\".
#le code : System.out.println(LangHelper.get("log.track_transition", "canalave_day", "eterna_night"));
# -> display : Going from music "canalave_day" to "eterna_night".

log.config.error.play=[PokeTunes AutoPlay] Error reading the configuration file
log.config.error.create.configfolder=[PokeTunes AutoPlay] Unable to create the configuration folder
log.config.error.write.configfile=[PokeTunes AutoPlay] Error writing the configuration file
log.config.error.write.infofile=[PokeTunes AutoPlay] Error writing the information file

log.player.error.rp.notfound=[PokeTunes AutoPlay] Resource pack not found : {0}
log.player.error.rp.oggfile.notfound=[PokeTunes AutoPlay] File .ogg not found in zip : \"{0}\"
log.player.error.rp.oggfile.play=[PokeTunes AutoPlay] .ogg read error : \"{0}\"
log.player.reading=[PokeTunes AutoPlay] Playing of : \"{0}\"
#zip file couldn't be read
log.player.error.rp.read=[PokeTunes AutoPlay] Zip read exception : {0}

log.resreload.trigger.load.soundsjson=[PokeTunes AutoPlay] ResourceReloadListener trigger: sounds.json reload
log.resreload.error.musics.load.soundsjson=[PokeTunes AutoPlay] Failed to load musics from sounds.json !
log.resreload.musics.load.soundsjson=[PokeTunes AutoPlay] Musics successfully reloaded !
log.resreload.resources.ready=[PokeTunes AutoPlay] Resources are ready !
log.resreload.resources.reloaded=Musics successfully reloaded ! Total : {0}

log.musicmanager.music.finished=[PokeTunes AutoPlay] Music is finished, reset the status.
log.musicmanager.firstmusic.get.category=[PokeTunes AutoPlay] Attempt to play first music for category {0}...
log.musicmanager.error.resources.notready=[PokeTunes AutoPlay] Resources are not ready yet, cancelation of playing.
log.musicmanager.nomusic.get.category=[PokeTunes AutoPlay] No music found for this category : {0}
log.musicmanager.music.playing=[PokeTunes AutoPlay] Playback of : \"{0}\" (max volume : {1})
log.musicmanager.ismusicplaying=[PokeTunes AutoPlay] Is music playing ? : {0}
log.musicmanager.music.launch=[PokeTunes AutoPlay] Attempt to play music...

log.minecraftclient.suppressor.activate=[PokeTunes AutoPlay] Dimension changement detected ? enabling suppressor.

log.soundinstancemixin.volume.updated=[PokeTunes AutoPlay] Volume updated : {0}
log.soundinstancemixin.getvolume.called=[PokeTunes AutoPlay] getVolume method called

log.soundmanagermixin.extraneous.block=[PokeTunes AutoPlay] Extraneous sound blocked : {0}

log.titlescreenmixin.visible=[PokeTunes AutoPlay] Main menu is now visible !

log.soundsuppressor.extraneoussounds.blocked=[PokeTunes AutoPlay] Extraneous noises blocking enabled.
log.soundsuppressor.extraneoussounds.unblocked=[PokeTunes AutoPlay] Extraneous noises blocking disabled.

log.soundloader.music.loaded=[PokeTunes AutoPlay] Loaded music : {0} -> \"{1}\" (volume: {2}, weight: {3})
log.soundloader.error.entry.parsing=[PokeTunes AutoPlay] Error while parsing an entry : {0}
log.soundloader.loadedmusics.getnumber=[PokeTunes AutoPlay] {0} musics loaded
log.soundloader.error.soundsjson.load=[PokeTunes AutoPlay] Error loading sounds.json

log.start.helloworld=Hello Fabric world, it's PokeTunes AutoPlay !
log.start.modinit=[PokeTunes AutoPlay] Mod initialization
log.start.config.loaded=[PokeTunes AutoPlay] Configuration loaded